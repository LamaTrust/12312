
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from services.storage import knowledge_base
from services.users import user_ids, save_users

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_ids.add(update.effective_user.id)
    save_users(user_ids)

    welcome_text = (
        "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
        "–Ø ‚Äî –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã "
        "–æ –ø–µ—Ä–µ–≤–æ–¥–µ –º–µ–∂–¥—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏, —Ñ–æ—Ä–º–∞—Ö –æ–±—É—á–µ–Ω–∏—è, —Å–ø—Ä–∞–≤–∫–∞—Ö –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º.\n\n"
        "üëá –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"
    )

    keyboard = [
        [InlineKeyboardButton(text=section, callback_data=f"section|{section}")]
        for section in knowledge_base.keys()
    ]
    keyboard.append([InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_direct")])

    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text(welcome_text, parse_mode="Markdown", reply_markup=reply_markup)
    elif update.callback_query:
        await update.callback_query.edit_message_text(welcome_text, parse_mode="Markdown", reply_markup=reply_markup)
